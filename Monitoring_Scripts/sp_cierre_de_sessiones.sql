SET NOCOUNT ON;
DECLARE @TABLA_DESTINO VARCHAR(500)= 'GN_MONITOREO', --!! TABLA DESTINO 
@BD_DESTINO SYSNAME= 'STONE', --!!BASE DE DATOS DESTINO
@SCHEMA VARCHAR(MAX), --!! RESULTADO DEL PROCEDIMIENTO
@SQL NVARCHAR(4000); --!! SQL PARA LIMPIAR LA TABLA
SET @TABLA_DESTINO = @BD_DESTINO+'.DBO.'+@TABLA_DESTINO;

/***************************
--!! CREAR LA TABLA DESTINO gn_monitoreo
****************************/

IF OBJECT_ID(@TABLA_DESTINO) IS NULL
BEGIN
EXEC dbo.SP_WHOISACTIVE 
@SHOW_SLEEPING_SPIDS = 2, 
@RETURN_SCHEMA = 1, 
@SCHEMA = @SCHEMA OUTPUT;
SET @SCHEMA = UPPER(REPLACE(@SCHEMA, '<TABLE_NAME>', @TABLA_DESTINO));
EXEC (@SCHEMA);
END;

/****************************************
 SI YA EXISTE LA TABLA, BORRAR LOS DATOS  
*****************************************/

SET @SQL = 'DELETE FROM '+@TABLA_DESTINO;
EXEC (@SQL);

/***************************
--!! POBLAR LA TABLA DESTINO 
****************************/

EXEC dbo.SP_WHOISACTIVE 
     @SHOW_SLEEPING_SPIDS = 2, 
     @DESTINATION_TABLE = @TABLA_DESTINO;
GO

/**************************************************************
 CURSOR PARA ELIMINAR TODOS LOS PROCESOS DORMIDOS EN SQLSERVER
***************************************************************/

DECLARE @SESSION_ID INT, @SMT VARCHAR(MAX);
DECLARE KILL_PROCESO CURSOR LOCAL FAST_FORWARD
FOR SELECT GN_MONITOREO.SESSION_ID
    FROM dbo.GN_MONITOREO
    WHERE [STATUS] IN('sleeping','suspended')
         AND CONVERT(SMALLINT, SUBSTRING(GN_MONITOREO.[DD HH:MM:SS.MSS], 7, 2)) > 10 --!! 10 MINUTOS
    OPTION(KEEPFIXED PLAN);
OPEN KILL_PROCESO;
FETCH NEXT FROM KILL_PROCESO INTO @SESSION_ID;
WHILE @@FETCH_STATUS = 0
BEGIN
BEGIN TRY
SET @SMT = 'KILL '+CAST(@SESSION_ID AS VARCHAR(5));
EXEC (@SMT);
END TRY
BEGIN CATCH
END CATCH;
FETCH NEXT FROM KILL_PROCESO INTO @SESSION_ID;
END;
CLOSE KILL_PROCESO;
DEALLOCATE KILL_PROCESO;
GO
SELECT * FROM GN_MONITOREO
